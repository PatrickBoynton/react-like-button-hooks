{"version":3,"sources":["hooks/useCount.js","App.js","reportWebVitals.js","index.js"],"names":["useCount","useState","count","setCount","text","setText","checkCount","useEffect","App","onClickButton","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAqBeA,EAnBE,WACf,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAMMC,EAAa,SAACJ,GACJG,EAAJ,IAAVH,EAAsB,OAAkB,UAO1C,OAJAK,qBAAU,WACRD,EAAWJ,KACV,CAACI,EAAYJ,IAET,CAACA,EAAOE,EAZO,WACpBD,EAASD,EAAQ,M,eCQNM,EAZH,WACV,MAAqCR,IAArC,mBAAOE,EAAP,KAAcE,EAAd,KAAoBK,EAApB,KAEA,OACE,mCACE,yBAAQC,QAAS,kBAAMD,KAAvB,UACGP,EADH,IACWE,QCGFO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1de11e03.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useCount = () => {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState('');\n\n  const onClickButton = () => {\n    setCount(count + 1);\n  };\n\n  const checkCount = (count) => {\n    count === 1 ? setText('like') : setText('likes');\n  };\n\n  useEffect(() => {\n    checkCount(count);\n  }, [checkCount, count]);\n\n  return [count, text, onClickButton];\n};\n\nexport default useCount;\n","import useCount from './hooks/useCount';\nimport './App.css';\n\nconst App = () => {\n  const [count, text, onClickButton] = useCount();\n\n  return (\n    <>\n      <button onClick={() => onClickButton()}>\n        {count} {text}\n      </button>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}